name: ðŸ‘· iOs CI

on:
  push:
    branches:
      - ios_cmake_refix

  release:
    types:
      - created

  pull_request:
    branches:
      - master

jobs:
  BuildIpa:
    runs-on: macOS-latest
    strategy:
      matrix:
        deployment-target: ["14.0"]
        platform: ["OS64"]
        qt-version: ["6.4.3"]
        build-type: ["Release"]
        bitcode: ["FALSE"]
        # 1 is legacy build system
        # 12 is new build system
        build-system: ["1"]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/checkout@v3
        name: â¬† Install toolchain
        with:
          repository: OlivierLDff/IosCMakeToolchain
          path: ios-toolchain
      - name: Cache Qt
        id: cache-qt-ios
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/Qt-${{ runner.os }}-${{ matrix.qt-version }}
          key: ${{ runner.os }}-QtCache-${{ matrix.qt-version }}-ios

      - name: â¬† Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: "==3.1.*"
          version: ${{ matrix.qt-version }}
          target: 'ios'
          cache: true
          host: 'mac'
          dir: ${{ github.workspace }}/Qt-${{ runner.os }}-${{ matrix.qt-version }}
          cache-key-prefix: 'install-qt-action'
          modules: "qtconnectivity qtimageformats qtmultimedia qtnetworkauth qtpositioning qtsensors qtvirtualkeyboard qtwebsockets qtwebview qt5compat"
      - name: â¬† Install Qt Macos 2
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: "==3.1.*"
          version: ${{ matrix.qt-version }}
          target: 'desktop'
          host: 'mac'
          arch: 'clang_64'
          dir: ${{ github.workspace }}/Qt-${{ runner.os }}-${{ matrix.qt-version }}
          cache-key-prefix: 'install-qt-action'
          tools: 'tools_cmake'

      - uses: OlivierLDff/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.IOS_CERTIFICATES_FILE_BASE64 }}
          p12-password: ${{ secrets.IOS_CERTIFICATES_PASSWORD }}
      - uses: OlivierLDff/download-provisioning-profiles@v1
        with:
          bundle-id: com.mahoutech.blume
          issuer-id: ${{ secrets.IOS_APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.IOS_APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.IOS_APPSTORE_PRIVATE_KEY }}
      - name: ðŸ”§ Configure
        run: |
          echo "clang"
          ls -la ${{ github.workspace }}/Qt-${{ runner.os }}-${{ matrix.qt-version }}/Qt/${{ matrix.qt-version }}/clang_64
          echo "ios"
          ls -la ${{ github.workspace }}/Qt-${{ runner.os }}-${{ matrix.qt-version }}/Qt/${{ matrix.qt-version }}/ios/
          ls -laR ${{ github.workspace }}/Qt-${{ runner.os }}-${{ matrix.qt-version }}/Qt/${{ matrix.qt-version }}/ios/lib/cmake
          mkdir -p build 
          export QT_HOST_PATH=${{ github.workspace }}/Qt-${{ runner.os }}-${{ matrix.qt-version }}/Qt/${{ matrix.qt-version }}/clang_64
          ${{ github.workspace }}/Qt-${{ runner.os }}-${{ matrix.qt-version }}/Qt/Tools/CMake/CMake.app/Contents/bin/cmake \
            -G "Xcode" \
            -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/Qt-${{ runner.os }}-${{ matrix.qt-version }}/Qt/${{ matrix.qt-version }}/ios/lib/cmake/Qt6/qt.toolchain.cmake \
            -DCMAKE_CONFIGURATION_TYPES="Release" \
            -DDEPLOYMENT_TARGET=${{ matrix.deployment-target }} \
            -DQT_HOST_PATH=${{ github.workspace }}/Qt-${{ runner.os }}-${{ matrix.qt-version }}/Qt/${{ matrix.qt-version }}/c \
            -DENABLE_VISIBILITY=FALSE \
            -DQt6_DIR=${{ github.workspace }}/Qt-${{ runner.os }}-${{ matrix.qt-version }}/Qt/${{ matrix.qt-version }}/ios/lib/cmake/Qt6
            -DCMAKE_PREFIX_PATH=${{ github.workspace }}/Qt-${{ runner.os }}-${{ matrix.qt-version }}/Qt/${{ matrix.qt-version }}/ios \
            -DQT_IOS_TEAM_ID=${{ secrets.IOS_TEAM_ID }} \
            -DQT_IOS_CODE_SIGN_IDENTITY=${{ secrets.IOS_CODE_SIGN_IDENTITY }} \
            -DQT_IOS_PROVISIONING_PROFILE_SPECIFIER=${{ secrets.IOS_PROVISIONING_PROFILE_SPECIFIER }} \
            -B ./build/ -S .
      # - name: ðŸ”¨ Build Blume
      #   run: cmake --build build --target Blume --config "${{ matrix.build-type }}"
      - name: ðŸ”¨ Build Blume Archive
        run: cmake --build build --target BlumeArchive --config "${{ matrix.build-type }}"
      # - name: ðŸš€ Deploy Blume Ipa
      #   run: cmake --build build --target BlumeIpa --config "${{ matrix.build-type }}"
      # - name: ðŸ“¦ Upload Blume App
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: Blume-${{ matrix.platform }}-${{ matrix.deployment-target }}.app
      #     path: build/${{ matrix.build-type }}-iphoneos/Blume.app
      # - name: ðŸ“¦ Upload Blume Ipa
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: Blume-i${{ matrix.platform }}-${{ matrix.deployment-target }}.ipa
      #     path: build/BlumeIpa/Blume.ipa
      # - uses: OlivierLDff/upload-testflight-build@v1
      #   if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags/v')
      #   name: ðŸš€ Release to TestFlight
      #   with:
      #     app-path: build/BlumeIpa/Blume.ipa
      #     issuer-id: ${{ secrets.IOS_APPSTORE_ISSUER_ID }}
      #     api-key-id: ${{ secrets.IOS_APPSTORE_KEY_ID }}
      #     api-private-key: ${{ secrets.IOS_APPSTORE_PRIVATE_KEY }}
      # - name: ðŸš€ Upload Release Asset
      #   if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags/v')
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ github.event.release.upload_url }}
      #     asset_path: build/BlumeIpa/Blume.ipa
      #     asset_name: Blume-i${{ matrix.platform }}-${{ matrix.deployment-target }}.ipa
      #     asset_content_type: application/zip
